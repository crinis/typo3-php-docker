name: build-images
on:
  workflow_dispatch: {}
  schedule:
    - cron: "0 0 * * 0"

env:
  IMAGE_NAME: typo3-php

jobs:
  build-amd64:
    strategy:
      matrix:
        php:
          - "8.4"
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v6
        if: matrix.php != '8.4'
        with:
          context: ${{ matrix.php }}/apache
          file: ${{ matrix.php }}/apache/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:amd64-${{ matrix.php }}-apache
      - name: Build and push latest
        uses: docker/build-push-action@v6
        if: matrix.php == '8.4'
        with:
          context: ${{ matrix.php }}/apache
          file: ${{ matrix.php }}/apache/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:amd64-${{ matrix.php }}-apache, ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:amd64-latest
  
  build-arm64:
    strategy:
      matrix:
        php:
          - "8.4"
    runs-on: ubuntu-24.04-arm
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v6
        if: matrix.php != '8.4'
        with:
          context: ${{ matrix.php }}/apache
          file: ${{ matrix.php }}/apache/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:arm64-${{ matrix.php }}-apache
      - name: Build and push latest
        uses: docker/build-push-action@v6
        if: matrix.php == '8.4'
        with:
          context: ${{ matrix.php }}/apache
          file: ${{ matrix.php }}/apache/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:arm64-${{ matrix.php }}-apache, ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:arm64-latest


  create-manifests:
    strategy:
      matrix:
        php:
          - "8.4"
    runs-on: ubuntu-24.04
    needs: [build-amd64, build-arm64]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Create manifest for tag ${{ matrix.php }}-apache and push
        run: |
          docker manifest create \
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ matrix.php }}-apache
            --amend ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:amd64-${{ matrix.php }}-apache
            --amend ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:arm64-${{ matrix.php }}-apache
          docker manifest push ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ matrix.php }}-apache

      - name: Create latest manifest and push
        run: |
          docker manifest create \
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest
            --amend ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:amd64-latest
            --amend ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:arm64-latest
